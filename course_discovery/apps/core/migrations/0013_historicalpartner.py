# Generated by Django 1.11.15 on 2019-06-05 17:58


from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_extensions.db.fields
import simple_history.models


class Migration(migrations.Migration):

    dependencies = [
        ('sites', '0002_alter_domain_unique'),
        ('core', '0012_partner_publisher_url'),
    ]

    operations = [
        migrations.CreateModel(
            name='HistoricalPartner',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('name', models.CharField(db_index=True, max_length=128)),
                ('short_code', models.CharField(db_index=True, help_text='Convenient code/slug used to identify this Partner (e.g. for management commands.)', max_length=8, verbose_name='Short Code')),
                ('courses_api_url', models.URLField(blank=True, max_length=255, null=True, verbose_name='Courses API URL')),
                ('lms_coursemode_api_url', models.URLField(blank=True, max_length=255, null=True, verbose_name='Course Mode API URL')),
                ('ecommerce_api_url', models.URLField(blank=True, max_length=255, null=True, verbose_name='E-Commerce API URL')),
                ('organizations_api_url', models.URLField(blank=True, max_length=255, null=True, verbose_name='Organizations API URL')),
                ('programs_api_url', models.URLField(blank=True, max_length=255, null=True, verbose_name='Programs API URL')),
                ('marketing_site_api_url', models.URLField(blank=True, max_length=255, null=True, verbose_name='Marketing Site API URL')),
                ('marketing_site_url_root', models.URLField(blank=True, max_length=255, null=True, verbose_name='Marketing Site URL')),
                ('marketing_site_api_username', models.CharField(blank=True, max_length=255, null=True, verbose_name='Marketing Site API Username')),
                ('marketing_site_api_password', models.CharField(blank=True, max_length=255, null=True, verbose_name='Marketing Site API Password')),
                ('oidc_url_root', models.CharField(max_length=255, null=True, verbose_name='OpenID Connect URL')),
                ('oidc_key', models.CharField(max_length=255, null=True, verbose_name='OpenID Connect Key')),
                ('oidc_secret', models.CharField(max_length=255, null=True, verbose_name='OpenID Connect Secret')),
                ('studio_url', models.URLField(blank=True, max_length=255, null=True, verbose_name='Studio URL')),
                ('publisher_url', models.URLField(blank=True, help_text='The base URL of your publisher service, if used. Example: https://publisher.example.com/', max_length=255, null=True, verbose_name='Publisher URL')),
                ('lms_url', models.URLField(blank=True, max_length=255, null=True, verbose_name='LMS URL')),
                ('analytics_url', models.URLField(blank=True, default='', max_length=255, verbose_name='Analytics API URL')),
                ('analytics_token', models.CharField(blank=True, default='', max_length=255, verbose_name='Analytics Access Token')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('site', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='sites.Site')),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'verbose_name': 'historical Partner',
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
