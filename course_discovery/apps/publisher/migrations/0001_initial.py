# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import sortedm2m.fields
import course_discovery.apps.publisher.models
from django.conf import settings
import django_extensions.db.fields


class Migration(migrations.Migration):

    dependencies = [
        ('course_metadata', '0006_auto_20160720_0223'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('ietf_language_tags', '0002_language_tag_data_migration'),
        ('core', '0007_auto_20160510_2017'),
    ]

    operations = [
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.AutoField(verbose_name='ID', auto_created=True, primary_key=True, serialize=False)),
                ('created', django_extensions.db.fields.CreationDateTimeField(verbose_name='created', auto_now_add=True)),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(verbose_name='modified', auto_now=True)),
                ('title', models.CharField(null=True, default=None, blank=True, max_length=255)),
                ('number', models.CharField(null=True, blank=True, max_length=50)),
                ('short_description', models.CharField(null=True, default=None, blank=True, max_length=255)),
                ('full_description', models.TextField(null=True, default=None, blank=True)),
                ('expected_learnings', models.TextField(null=True, default=None, blank=True)),
                ('syllabus', models.TextField(null=True, default=None, blank=True)),
                ('prerequisites', models.TextField(null=True, default=None, blank=True)),
                ('learner_testimonial', models.CharField(null=True, blank=True, max_length=50)),
                ('level_type', models.ForeignKey(to='course_metadata.LevelType', blank=True, related_name='publisher_courses', null=True, default=None)),
                ('organizations', models.ManyToManyField(to='course_metadata.Organization', blank=True, related_name='publisher_courses')),
                ('primary_subject', models.ForeignKey(to='course_metadata.Subject', related_name='publisher_courses_primary')),
                ('secondary_subject', models.ForeignKey(to='course_metadata.Subject', related_name='publisher_courses_secondary')),
                ('tertiary_subject', models.ForeignKey(to='course_metadata.Subject', related_name='publisher_courses_tertiary')),
            ],
            options={
                'abstract': False,
                'ordering': ('-modified', '-created'),
                'get_latest_by': 'modified',
            },
            bases=(models.Model, course_discovery.apps.publisher.models.ChangedByMixin),
        ),
        migrations.CreateModel(
            name='CourseRun',
            fields=[
                ('id', models.AutoField(verbose_name='ID', auto_created=True, primary_key=True, serialize=False)),
                ('created', django_extensions.db.fields.CreationDateTimeField(verbose_name='created', auto_now_add=True)),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(verbose_name='modified', auto_now=True)),
                ('lms_course_id', models.CharField(unique=True, null=True, blank=True, max_length=255)),
                ('start', models.DateTimeField(null=True, blank=True)),
                ('end', models.DateTimeField(null=True, blank=True)),
                ('enrollment_start', models.DateTimeField(null=True, blank=True)),
                ('enrollment_end', models.DateTimeField(null=True, blank=True)),
                ('certificate_generation', models.DateTimeField(null=True, blank=True)),
                ('pacing_type', models.CharField(choices=[('self_paced', 'Self-paced'), ('instructor_paced', 'Instructor-paced')], db_index=True, null=True, blank=True, max_length=255)),
                ('min_effort', models.PositiveSmallIntegerField(help_text='Estimated minimum number of hours per week needed to complete a course run.', null=True, blank=True)),
                ('max_effort', models.PositiveSmallIntegerField(help_text='Estimated maximum number of hours per week needed to complete a course run.', null=True, blank=True)),
                ('length', models.PositiveIntegerField(help_text='Length of course, in number of weeks', null=True, blank=True)),
                ('is_re_run', models.BooleanField(default=False)),
                ('is_xseries', models.BooleanField(default=False)),
                ('xseries_name', models.CharField(max_length=255)),
                ('is_micromasters', models.BooleanField(default=False)),
                ('micromasters_name', models.CharField(max_length=255)),
                ('contacted_partner_manager', models.BooleanField(default=False)),
                ('seo_review', models.TextField(help_text='SEO review on your course title and short description', null=True, default=None, blank=True)),
                ('keywords', models.TextField(help_text='Please add top 10 comma separated keywords for your course content', default=None, blank=True)),
                ('notes', models.TextField(help_text='Please add any additional notes or special instructions for the course About Page.', null=True, default=None, blank=True)),
                ('target_content', models.BooleanField(default=False)),
                ('priority', models.CharField(choices=[('L1', 'Level 1'), ('L2', 'Level 2'), ('L3', 'Level 3'), ('L4', 'Level 4'), ('L5', 'Level 5')], null=True, blank=True, max_length=5)),
                ('course_team_admins', models.TextField(help_text='Comma separated list of edX usernames or emails of admins.', null=True, default=None, blank=True)),
                ('course_team_additional_staff', models.TextField(help_text='Comma separated list of edX usernames or emails of additional staff.', null=True, default=None, blank=True)),
                ('course', models.ForeignKey(to='publisher.Course')),
                ('language', models.ForeignKey(to='ietf_language_tags.LanguageTag', related_name='publisher_course_runs', null=True, blank=True)),
                ('sponsor', models.ManyToManyField(to='course_metadata.Organization', blank=True, related_name='publisher_course_runs')),
                ('staff', sortedm2m.fields.SortedManyToManyField(to='course_metadata.Person', help_text=None, blank=True, related_name='publisher_course_runs_staffed')),
                ('transcript_languages', models.ManyToManyField(to='ietf_language_tags.LanguageTag', blank=True, related_name='publisher_transcript_course_runs')),
            ],
            options={
                'abstract': False,
                'ordering': ('-modified', '-created'),
                'get_latest_by': 'modified',
            },
            bases=(models.Model, course_discovery.apps.publisher.models.ChangedByMixin),
        ),
        migrations.CreateModel(
            name='HistoricalCourse',
            fields=[
                ('id', models.IntegerField(verbose_name='ID', db_index=True, blank=True, auto_created=True)),
                ('created', django_extensions.db.fields.CreationDateTimeField(verbose_name='created', auto_now_add=True)),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(verbose_name='modified', auto_now=True)),
                ('title', models.CharField(null=True, default=None, blank=True, max_length=255)),
                ('number', models.CharField(null=True, blank=True, max_length=50)),
                ('short_description', models.CharField(null=True, default=None, blank=True, max_length=255)),
                ('full_description', models.TextField(null=True, default=None, blank=True)),
                ('expected_learnings', models.TextField(null=True, default=None, blank=True)),
                ('syllabus', models.TextField(null=True, default=None, blank=True)),
                ('prerequisites', models.TextField(null=True, default=None, blank=True)),
                ('learner_testimonial', models.CharField(null=True, blank=True, max_length=50)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(to=settings.AUTH_USER_MODEL, on_delete=django.db.models.deletion.SET_NULL, related_name='+', null=True)),
                ('level_type', models.ForeignKey(to='course_metadata.LevelType', on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', null=True, blank=True, db_constraint=False)),
                ('primary_subject', models.ForeignKey(to='course_metadata.Subject', on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', null=True, blank=True, db_constraint=False)),
                ('secondary_subject', models.ForeignKey(to='course_metadata.Subject', on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', null=True, blank=True, db_constraint=False)),
                ('tertiary_subject', models.ForeignKey(to='course_metadata.Subject', on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', null=True, blank=True, db_constraint=False)),
            ],
            options={
                'verbose_name': 'historical course',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalCourseRun',
            fields=[
                ('id', models.IntegerField(verbose_name='ID', db_index=True, blank=True, auto_created=True)),
                ('created', django_extensions.db.fields.CreationDateTimeField(verbose_name='created', auto_now_add=True)),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(verbose_name='modified', auto_now=True)),
                ('lms_course_id', models.CharField(db_index=True, null=True, blank=True, max_length=255)),
                ('start', models.DateTimeField(null=True, blank=True)),
                ('end', models.DateTimeField(null=True, blank=True)),
                ('enrollment_start', models.DateTimeField(null=True, blank=True)),
                ('enrollment_end', models.DateTimeField(null=True, blank=True)),
                ('certificate_generation', models.DateTimeField(null=True, blank=True)),
                ('pacing_type', models.CharField(choices=[('self_paced', 'Self-paced'), ('instructor_paced', 'Instructor-paced')], db_index=True, null=True, blank=True, max_length=255)),
                ('min_effort', models.PositiveSmallIntegerField(help_text='Estimated minimum number of hours per week needed to complete a course run.', null=True, blank=True)),
                ('max_effort', models.PositiveSmallIntegerField(help_text='Estimated maximum number of hours per week needed to complete a course run.', null=True, blank=True)),
                ('length', models.PositiveIntegerField(help_text='Length of course, in number of weeks', null=True, blank=True)),
                ('is_re_run', models.BooleanField(default=False)),
                ('is_xseries', models.BooleanField(default=False)),
                ('xseries_name', models.CharField(max_length=255)),
                ('is_micromasters', models.BooleanField(default=False)),
                ('micromasters_name', models.CharField(max_length=255)),
                ('contacted_partner_manager', models.BooleanField(default=False)),
                ('seo_review', models.TextField(help_text='SEO review on your course title and short description', null=True, default=None, blank=True)),
                ('keywords', models.TextField(help_text='Please add top 10 comma separated keywords for your course content', default=None, blank=True)),
                ('notes', models.TextField(help_text='Please add any additional notes or special instructions for the course About Page.', null=True, default=None, blank=True)),
                ('target_content', models.BooleanField(default=False)),
                ('priority', models.CharField(choices=[('L1', 'Level 1'), ('L2', 'Level 2'), ('L3', 'Level 3'), ('L4', 'Level 4'), ('L5', 'Level 5')], null=True, blank=True, max_length=5)),
                ('course_team_admins', models.TextField(help_text='Comma separated list of edX usernames or emails of admins.', null=True, default=None, blank=True)),
                ('course_team_additional_staff', models.TextField(help_text='Comma separated list of edX usernames or emails of additional staff.', null=True, default=None, blank=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('course', models.ForeignKey(to='publisher.Course', on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', null=True, blank=True, db_constraint=False)),
                ('history_user', models.ForeignKey(to=settings.AUTH_USER_MODEL, on_delete=django.db.models.deletion.SET_NULL, related_name='+', null=True)),
                ('language', models.ForeignKey(to='ietf_language_tags.LanguageTag', on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', null=True, blank=True, db_constraint=False)),
            ],
            options={
                'verbose_name': 'historical course run',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalSeat',
            fields=[
                ('id', models.IntegerField(verbose_name='ID', db_index=True, blank=True, auto_created=True)),
                ('created', django_extensions.db.fields.CreationDateTimeField(verbose_name='created', auto_now_add=True)),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(verbose_name='modified', auto_now=True)),
                ('type', models.CharField(choices=[('honor', 'Honor'), ('audit', 'Audit'), ('verified', 'Verified'), ('professional', 'Professional (with ID verification)'), ('no-id-professional', 'Professional (no ID verifiation)'), ('credit', 'Credit')], max_length=63)),
                ('price', models.DecimalField(max_digits=10, decimal_places=2, default=0.0)),
                ('upgrade_deadline', models.DateTimeField(null=True, blank=True)),
                ('credit_provider', models.CharField(null=True, blank=True, max_length=255)),
                ('credit_hours', models.IntegerField(null=True, blank=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('course_run', models.ForeignKey(to='publisher.CourseRun', on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', null=True, blank=True, db_constraint=False)),
                ('currency', models.ForeignKey(to='core.Currency', on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', null=True, blank=True, db_constraint=False)),
                ('history_user', models.ForeignKey(to=settings.AUTH_USER_MODEL, on_delete=django.db.models.deletion.SET_NULL, related_name='+', null=True)),
            ],
            options={
                'verbose_name': 'historical seat',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='Seat',
            fields=[
                ('id', models.AutoField(verbose_name='ID', auto_created=True, primary_key=True, serialize=False)),
                ('created', django_extensions.db.fields.CreationDateTimeField(verbose_name='created', auto_now_add=True)),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(verbose_name='modified', auto_now=True)),
                ('type', models.CharField(choices=[('honor', 'Honor'), ('audit', 'Audit'), ('verified', 'Verified'), ('professional', 'Professional (with ID verification)'), ('no-id-professional', 'Professional (no ID verifiation)'), ('credit', 'Credit')], max_length=63)),
                ('price', models.DecimalField(max_digits=10, decimal_places=2, default=0.0)),
                ('upgrade_deadline', models.DateTimeField(null=True, blank=True)),
                ('credit_provider', models.CharField(null=True, blank=True, max_length=255)),
                ('credit_hours', models.IntegerField(null=True, blank=True)),
                ('course_run', models.ForeignKey(to='publisher.CourseRun', related_name='seats')),
                ('currency', models.ForeignKey(to='core.Currency', related_name='publisher_seats')),
            ],
            options={
                'abstract': False,
                'ordering': ('-modified', '-created'),
                'get_latest_by': 'modified',
            },
            bases=(models.Model, course_discovery.apps.publisher.models.ChangedByMixin),
        ),
    ]
