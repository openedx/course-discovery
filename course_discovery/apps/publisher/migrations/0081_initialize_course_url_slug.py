# -*- coding: utf-8 -*-
# Generated by Django 1.11.23 on 2019-09-04 18:12
from __future__ import unicode_literals

from django.core.exceptions import ObjectDoesNotExist
from django.db import migrations
import django_extensions.db.fields


class Migration(migrations.Migration):

    def migrate_data_forward(apps, schema_editor):
        Course = apps.get_model('publisher', 'course')
        DiscoveryCourse = apps.get_model('course_metadata', 'course')
        for instance in Course.objects.all():
            # clear any existing slugs to ensure uniqueness
            instance.url_slug = ''
            # recreate organization() and partner() methods
            organization = instance.organizations.all().first()
            partner = organization.partner if organization else None
            key = '{org}+{number}'.format(org=instance.organizations.first().key, number=instance.number)
            try:
                discovery_course = DiscoveryCourse.everything.get(partner=partner, key=key, draft=False)
                instance.url_slug = discovery_course.url_slug
            except ObjectDoesNotExist:
                # no matching discovery course just means this one hasn't been published yet
                pass
            # will set the url_slug if not already set
            instance.save()

    dependencies = [
        ('publisher', '0080_remove_publisher_waffle_switches'),
        ('course_metadata', '0194_initialize_course_url_slug')
    ]

    operations = [
        migrations.RunPython(
            migrate_data_forward,
            migrations.RunPython.noop
        )
    ]
