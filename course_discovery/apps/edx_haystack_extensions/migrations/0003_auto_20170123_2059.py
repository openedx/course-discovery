# -*- coding: utf-8 -*-
# Generated by Django 1.9.11 on 2017-01-23 20:59
from __future__ import unicode_literals

from django.db import migrations

from course_discovery.apps.edx_haystack_extensions.models import ElasticsearchBoostConfig

def add_professional_certificate_boosting(apps, schema_editor):
    """ Add professional certificate boosting to the ElasticsearchBoostConfig."""

    ElasticsearchBoostConfig = apps.get_model('edx_haystack_extensions', 'ElasticsearchBoostConfig')
    record = ElasticsearchBoostConfig.objects.get(pk=1)
    professional_certificate_boost = {
        "filter": {"term": {"type_exact": "Professional Certificate"}},
        "weight": 1.0
    }
    if professional_certificate_boost not in record.function_score['functions']:
        record.function_score['functions'].append(professional_certificate_boost)
        record.save()

class Migration(migrations.Migration):

    dependencies = [
        ('edx_haystack_extensions', '0002_auto_20170118_1826'),
    ]

    operations = [
        migrations.RunPython(add_professional_certificate_boosting, migrations.RunPython.noop)
    ]
